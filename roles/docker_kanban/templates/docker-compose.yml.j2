# {{ ansible_managed }}

version: "3.7"

x-op-restart-policy: &restart_policy
  restart: unless-stopped
x-op-image: &image
  image: openproject/community:${TAG:-12}
x-op-app: &app
  <<: *image
  <<: *restart_policy
  environment:
    RAILS_CACHE_STORE: "memcache"
    OPENPROJECT_CACHE__MEMCACHE__SERVER: "cache:11211"
    OPENPROJECT_RAILS__RELATIVE__URL__ROOT: ""
    DATABASE_URL: "postgres://postgres:{{ docker_kanban_postgres_password }}@db/openproject?pool=20&encoding=unicode&reconnect=true"
    RAILS_MIN_THREADS: 4
    RAILS_MAX_THREADS: 16
    # set to true to enable the email receiving feature. See ./docker/cron for more options
    IMAP_ENABLED: "${IMAP_ENABLED:-false}"
    EMAIL_DELIVERY_METHOD: smtp
    SMTP_ADDRESS: {{ all_internal_mail_server }}
    SMTP_PORT: {{ all_internal_mail_port }}
    SMTP_DOMAIN: {{ all_ext_domain }}
    SMTP_ENABLE_STARTTLS_AUTO: "false"
  volumes:
    - opdata:/var/openproject/assets
services:
  db:
    image: postgres:13
    <<: *restart_policy
    stop_grace_period: "3s"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: {{ docker_kanban_postgres_password }}
      POSTGRES_DB: openproject
    networks:
      - default
    labels:
      - "docker-volume-backup.stop-during-backup=true"
  cache:
    image: memcached
    <<: *restart_policy
    networks:
      - default
  proxy:
    <<: *image
    <<: *restart_policy
    command: "./docker/prod/proxy"
    environment:
      APP_HOST: web
      OPENPROJECT_RAILS__RELATIVE__URL__ROOT: ""
    depends_on:
      - web
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openproject-secure.entrypoints=web-secure"
      - "traefik.http.routers.openproject-secure.rule=Host(`project.{{ all_ext_domain }}`)"
      - "traefik.http.routers.openproject-secure.tls=true"
      - "traefik.http.routers.openproject-secure.tls.certresolver=godaddy"
      - "traefik.http.routers.openproject-secure.tls.domains[0].main={{ all_ext_domain }}"
      - "traefik.http.routers.openproject-secure.tls.domains[0].sans=*.{{ all_ext_domain }}"
  web:
    <<: *app
    command: "./docker/prod/web"
    networks:
      - traefik_proxy
      - default
    depends_on:
      - db
      - cache
      - seeder
    labels:
      - autoheal=true
      - "docker-volume-backup.stop-during-backup=true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health_checks/default"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
  autoheal:
    image: willfarrell/autoheal:1.2.0
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      AUTOHEAL_CONTAINER_LABEL: autoheal
  worker:
    <<: *app
    command: "./docker/prod/worker"
    networks:
      - default
    depends_on:
      - db
      - cache
      - seeder
    labels:
      - "docker-volume-backup.stop-during-backup=true"
  cron:
    <<: *app
    command: "./docker/prod/cron"
    networks:
      - default
    depends_on:
      - db
      - cache
      - seeder
    labels:
      - "docker-volume-backup.stop-during-backup=true"
  seeder:
    <<: *app
    command: "./docker/prod/seeder"
    restart: on-failure
    networks:
      - default
  backup_pgdata:
    image: jareware/docker-volume-backup:2.6.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - pgdata:/backup/pgdata:ro
      - {{ docker_kanban_docker_storage }}/volume_backups:/archive  
    environment:
      BACKUP_FILENAME: open-project-DB-%Y-%m-%dT%H-%M-%S.tar.gz
  backup_opdata:
    image: jareware/docker-volume-backup:2.6.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - opdata:/backup/opdata:ro
      - {{ docker_kanban_docker_storage }}/volume_backups:/archive 
    environment:
      BACKUP_FILENAME: open-project-APP-%Y-%m-%dT%H-%M-%S.tar.gz
volumes:
  pgdata:
  opdata:
networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
